#parse("include/entitiesNamesRef.vm")
// File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time )
$env.setLanguage('JavaScript')
#set ( $LCentityName = $fn.uncapitalize($entity.name) )

#set( $Dollar = '$' )
#set ( $editComponentName = $entity.name + "Edit" )

import React, { Component } from 'react';
import { Link, withRouter } from 'react-router-dom';
import { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';
import AppNavbar from './AppNavbar';



class $editComponentName extends Component {

    emptyItem = {
	
# TBD - Initiate every attribute	
	
	
	
        name: '',
        email: ''
    };

    constructor(props) {
        super(props);
        this.state = {
            item: this.emptyItem
        };
        this.handleChange = this.handleChange.bind(this);
        this.handleSubmit = this.handleSubmit.bind(this);
    }


# Add Parameters for every key attribute
    async componentDidMount() {
        if (this.props.match.params.id !== 'new') {
            const {$LCentityName} = await (await fetch(`/${LCentityName}/${Dollar}{this.props.match.params.id}`)).json();
            this.setState({item: {$LCentityName}});
        }
    }

    handleChange(event) {
        const target = event.target;
        const value = target.value;
        const name = target.name;
        let item = {...this.state.item};
        item[name] = value;
        this.setState({item});
    }

async handleSubmit(event) {
    event.preventDefault();
    const {item} = this.state;



# Add Parameters for every key attribute
    await fetch('/${LCentityName}' + (item.id ? '/' + item.id : ''), {
	
	
		# Add Parameters for every key attribute
        method: (item.id) ? 'PUT' : 'POST',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(item),
    });
    this.props.history.push('/${LCentityName}s');
}

    render() {
        const {item} = this.state;
		
		
		# Add Parameters for every key attribute
        const title = <h2>{item.id ? 'Edit ${entity.name}' : 'Add ${entity.name}'}</h2>;

        return <div>
            <AppNavbar/>
            <Container>
                {title}
                <Form onSubmit={this.handleSubmit}>
				
				
					# TBD Loop through every attribute and add an input box or date time picker for date variables
                    <FormGroup>
                        <Label for="name">Name</Label>
                        <Input type="text" name="name" id="name" value={item.name || ''}
                               onChange={this.handleChange} autoComplete="name"/>
                    </FormGroup>
                    <FormGroup>
                        <Label for="email">Email</Label>
                        <Input type="text" name="email" id="email" value={item.email || ''}
                               onChange={this.handleChange} autoComplete="email"/>
                    </FormGroup>
                    <FormGroup>
                        <Button color="primary" type="submit">Save</Button>{' '}
                        <Button color="secondary" tag={Link} to="/clients">Cancel</Button>
                    </FormGroup>
                </Form>
            </Container>
        </div>
    }
}

export default withRouter($editComponentName);